// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Other.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Protocol.Protobuf {

  /// <summary>Holder for reflection information generated from Other.proto</summary>
  public static partial class OtherReflection {

    #region Descriptor
    /// <summary>File descriptor for Other.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OtherReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgtPdGhlci5wcm90bxIIcHJvdG9jb2waC0Jhc2ljLnByb3RvIqUBCgpQbGF5",
            "ZXJEYXRhEgwKBG5hbWUYASABKAkSJgoJdHJhbnNmb3JtGAIgASgLMhMucHJv",
            "dG9jb2wuVHJhbnNmb3JtEhIKCmV4cGVyaWVuY2UYAyABKA0SFQoNbWF4RXhw",
            "ZXJpZW5jZRgEIAEoDRINCgVsZXZlbBgFIAEoDRInCglpbnZlbnRvcnkY5wcg",
            "ASgLMhMucHJvdG9jb2wuSW52ZW50b3J5Ii8KCUludmVudG9yeRIiCgVpdGVt",
            "cxgBIAMoCzITLnByb3RvY29sLkl0ZW1TdGFjayI8CglJdGVtU3RhY2sSIAoE",
            "aXRlbRgBIAEoCzISLnByb3RvY29sLkl0ZW1EYXRhEg0KBWNvdW50GAIgASgN",
            "IoMCCghJdGVtRGF0YRIMCgRuYW1lGAEgASgJEikKBHR5cGUYAiABKA4yGy5w",
            "cm90b2NvbC5JdGVtRGF0YS5JdGVtVHlwZRIqCgphcm1vclN0YXRzGAMgASgL",
            "MhQucHJvdG9jb2wuQXJtb3JTdGF0c0gAEiwKC3dlYXBvblN0YXRzGAQgASgL",
            "MhUucHJvdG9jb2wuV2VhcG9uU3RhdHNIABIsCgtwb3Rpb25TdGF0cxgFIAEo",
            "CzIVLnByb3RvY29sLlBvdGlvblN0YXRzSAAiLQoISXRlbVR5cGUSCQoFQVJN",
            "T1IQABIKCgZXRUFQT04QARIKCgZQT1RJT04QAkIHCgVzdGF0cyJhCgpBcm1v",
            "clN0YXRzEioKCWJhc2VTdGF0cxgBIAEoCzIXLnByb3RvY29sLkJhc2VJdGVt",
            "U3RhdHMSEgoKcHJvdGVjdGlvbhgCIAEoDRITCgtibG9ja0NoYW5jZRgDIAEo",
            "AiJdCgtXZWFwb25TdGF0cxIqCgliYXNlU3RhdHMYASABKAsyFy5wcm90b2Nv",
            "bC5CYXNlSXRlbVN0YXRzEg4KBmRhbWFnZRgCIAEoDRISCgpjcml0Q2hhbmNl",
            "GAMgASgCIn0KC1BvdGlvblN0YXRzEioKCWJhc2VTdGF0cxgBIAEoCzIXLnBy",
            "b3RvY29sLkJhc2VJdGVtU3RhdHMSEgoKZHVyYXRpb25NcxgCIAEoBBIUCgxz",
            "dGF0dXNFZmZlY3QYAyABKA0SGAoQc3RhdHVzTXVsdGlwbGllchgEIAEoAiK2",
            "AQoNQmFzZUl0ZW1TdGF0cxISCgpkdXJhYmlsaXR5GAEgASgNEhUKDW1heER1",
            "cmFiaWxpdHkYAiABKA0SDQoFbGV2ZWwYAyABKA0SLgoGcmFyaXR5GAQgASgO",
            "Mh4ucHJvdG9jb2wuQmFzZUl0ZW1TdGF0cy5SYXJpdHkiOwoGUmFyaXR5EgoK",
            "BkNPTU1PThAAEgwKCFVOQ09NTU9OEAESCAoEUkFSRRACEg0KCUxFR0VOREFS",
            "WRADQhSqAhFQcm90b2NvbC5Qcm90b2J1ZmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Protocol.Protobuf.BasicReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.Protobuf.PlayerData), global::Protocol.Protobuf.PlayerData.Parser, new[]{ "Name", "Transform", "Experience", "MaxExperience", "Level", "Inventory" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.Protobuf.Inventory), global::Protocol.Protobuf.Inventory.Parser, new[]{ "Items" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.Protobuf.ItemStack), global::Protocol.Protobuf.ItemStack.Parser, new[]{ "Item", "Count" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.Protobuf.ItemData), global::Protocol.Protobuf.ItemData.Parser, new[]{ "Name", "Type", "ArmorStats", "WeaponStats", "PotionStats" }, new[]{ "Stats" }, new[]{ typeof(global::Protocol.Protobuf.ItemData.Types.ItemType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.Protobuf.ArmorStats), global::Protocol.Protobuf.ArmorStats.Parser, new[]{ "BaseStats", "Protection", "BlockChance" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.Protobuf.WeaponStats), global::Protocol.Protobuf.WeaponStats.Parser, new[]{ "BaseStats", "Damage", "CritChance" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.Protobuf.PotionStats), global::Protocol.Protobuf.PotionStats.Parser, new[]{ "BaseStats", "DurationMs", "StatusEffect", "StatusMultiplier" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.Protobuf.BaseItemStats), global::Protocol.Protobuf.BaseItemStats.Parser, new[]{ "Durability", "MaxDurability", "Level", "Rarity" }, null, new[]{ typeof(global::Protocol.Protobuf.BaseItemStats.Types.Rarity) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PlayerData : pb::IMessage<PlayerData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerData> _parser = new pb::MessageParser<PlayerData>(() => new PlayerData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.Protobuf.OtherReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerData(PlayerData other) : this() {
      name_ = other.name_;
      transform_ = other.transform_ != null ? other.transform_.Clone() : null;
      experience_ = other.experience_;
      maxExperience_ = other.maxExperience_;
      level_ = other.level_;
      inventory_ = other.inventory_ != null ? other.inventory_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerData Clone() {
      return new PlayerData(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "transform" field.</summary>
    public const int TransformFieldNumber = 2;
    private global::Protocol.Protobuf.Transform transform_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.Protobuf.Transform Transform {
      get { return transform_; }
      set {
        transform_ = value;
      }
    }

    /// <summary>Field number for the "experience" field.</summary>
    public const int ExperienceFieldNumber = 3;
    private uint experience_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Experience {
      get { return experience_; }
      set {
        experience_ = value;
      }
    }

    /// <summary>Field number for the "maxExperience" field.</summary>
    public const int MaxExperienceFieldNumber = 4;
    private uint maxExperience_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MaxExperience {
      get { return maxExperience_; }
      set {
        maxExperience_ = value;
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 5;
    private uint level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "inventory" field.</summary>
    public const int InventoryFieldNumber = 999;
    private global::Protocol.Protobuf.Inventory inventory_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.Protobuf.Inventory Inventory {
      get { return inventory_; }
      set {
        inventory_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(Transform, other.Transform)) return false;
      if (Experience != other.Experience) return false;
      if (MaxExperience != other.MaxExperience) return false;
      if (Level != other.Level) return false;
      if (!object.Equals(Inventory, other.Inventory)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (transform_ != null) hash ^= Transform.GetHashCode();
      if (Experience != 0) hash ^= Experience.GetHashCode();
      if (MaxExperience != 0) hash ^= MaxExperience.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (inventory_ != null) hash ^= Inventory.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (transform_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Transform);
      }
      if (Experience != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Experience);
      }
      if (MaxExperience != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(MaxExperience);
      }
      if (Level != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Level);
      }
      if (inventory_ != null) {
        output.WriteRawTag(186, 62);
        output.WriteMessage(Inventory);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (transform_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Transform);
      }
      if (Experience != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Experience);
      }
      if (MaxExperience != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(MaxExperience);
      }
      if (Level != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Level);
      }
      if (inventory_ != null) {
        output.WriteRawTag(186, 62);
        output.WriteMessage(Inventory);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (transform_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transform);
      }
      if (Experience != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Experience);
      }
      if (MaxExperience != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxExperience);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Level);
      }
      if (inventory_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Inventory);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerData other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.transform_ != null) {
        if (transform_ == null) {
          Transform = new global::Protocol.Protobuf.Transform();
        }
        Transform.MergeFrom(other.Transform);
      }
      if (other.Experience != 0) {
        Experience = other.Experience;
      }
      if (other.MaxExperience != 0) {
        MaxExperience = other.MaxExperience;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.inventory_ != null) {
        if (inventory_ == null) {
          Inventory = new global::Protocol.Protobuf.Inventory();
        }
        Inventory.MergeFrom(other.Inventory);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (transform_ == null) {
              Transform = new global::Protocol.Protobuf.Transform();
            }
            input.ReadMessage(Transform);
            break;
          }
          case 24: {
            Experience = input.ReadUInt32();
            break;
          }
          case 32: {
            MaxExperience = input.ReadUInt32();
            break;
          }
          case 40: {
            Level = input.ReadUInt32();
            break;
          }
          case 7994: {
            if (inventory_ == null) {
              Inventory = new global::Protocol.Protobuf.Inventory();
            }
            input.ReadMessage(Inventory);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (transform_ == null) {
              Transform = new global::Protocol.Protobuf.Transform();
            }
            input.ReadMessage(Transform);
            break;
          }
          case 24: {
            Experience = input.ReadUInt32();
            break;
          }
          case 32: {
            MaxExperience = input.ReadUInt32();
            break;
          }
          case 40: {
            Level = input.ReadUInt32();
            break;
          }
          case 7994: {
            if (inventory_ == null) {
              Inventory = new global::Protocol.Protobuf.Inventory();
            }
            input.ReadMessage(Inventory);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Inventory : pb::IMessage<Inventory>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Inventory> _parser = new pb::MessageParser<Inventory>(() => new Inventory());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Inventory> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.Protobuf.OtherReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Inventory() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Inventory(Inventory other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Inventory Clone() {
      return new Inventory(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Protocol.Protobuf.ItemStack> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::Protocol.Protobuf.ItemStack.Parser);
    private readonly pbc::RepeatedField<global::Protocol.Protobuf.ItemStack> items_ = new pbc::RepeatedField<global::Protocol.Protobuf.ItemStack>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protocol.Protobuf.ItemStack> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Inventory);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Inventory other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      items_.WriteTo(ref output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Inventory other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ItemStack : pb::IMessage<ItemStack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ItemStack> _parser = new pb::MessageParser<ItemStack>(() => new ItemStack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ItemStack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.Protobuf.OtherReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemStack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemStack(ItemStack other) : this() {
      item_ = other.item_ != null ? other.item_.Clone() : null;
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemStack Clone() {
      return new ItemStack(this);
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 1;
    private global::Protocol.Protobuf.ItemData item_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.Protobuf.ItemData Item {
      get { return item_; }
      set {
        item_ = value;
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 2;
    private uint count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ItemStack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ItemStack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Item, other.Item)) return false;
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (item_ != null) hash ^= Item.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (item_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Item);
      }
      if (Count != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (item_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Item);
      }
      if (Count != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (item_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Item);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ItemStack other) {
      if (other == null) {
        return;
      }
      if (other.item_ != null) {
        if (item_ == null) {
          Item = new global::Protocol.Protobuf.ItemData();
        }
        Item.MergeFrom(other.Item);
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (item_ == null) {
              Item = new global::Protocol.Protobuf.ItemData();
            }
            input.ReadMessage(Item);
            break;
          }
          case 16: {
            Count = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (item_ == null) {
              Item = new global::Protocol.Protobuf.ItemData();
            }
            input.ReadMessage(Item);
            break;
          }
          case 16: {
            Count = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ItemData : pb::IMessage<ItemData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ItemData> _parser = new pb::MessageParser<ItemData>(() => new ItemData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ItemData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.Protobuf.OtherReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemData(ItemData other) : this() {
      name_ = other.name_;
      type_ = other.type_;
      switch (other.StatsCase) {
        case StatsOneofCase.ArmorStats:
          ArmorStats = other.ArmorStats.Clone();
          break;
        case StatsOneofCase.WeaponStats:
          WeaponStats = other.WeaponStats.Clone();
          break;
        case StatsOneofCase.PotionStats:
          PotionStats = other.PotionStats.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemData Clone() {
      return new ItemData(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::Protocol.Protobuf.ItemData.Types.ItemType type_ = global::Protocol.Protobuf.ItemData.Types.ItemType.Armor;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.Protobuf.ItemData.Types.ItemType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "armorStats" field.</summary>
    public const int ArmorStatsFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.Protobuf.ArmorStats ArmorStats {
      get { return statsCase_ == StatsOneofCase.ArmorStats ? (global::Protocol.Protobuf.ArmorStats) stats_ : null; }
      set {
        stats_ = value;
        statsCase_ = value == null ? StatsOneofCase.None : StatsOneofCase.ArmorStats;
      }
    }

    /// <summary>Field number for the "weaponStats" field.</summary>
    public const int WeaponStatsFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.Protobuf.WeaponStats WeaponStats {
      get { return statsCase_ == StatsOneofCase.WeaponStats ? (global::Protocol.Protobuf.WeaponStats) stats_ : null; }
      set {
        stats_ = value;
        statsCase_ = value == null ? StatsOneofCase.None : StatsOneofCase.WeaponStats;
      }
    }

    /// <summary>Field number for the "potionStats" field.</summary>
    public const int PotionStatsFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.Protobuf.PotionStats PotionStats {
      get { return statsCase_ == StatsOneofCase.PotionStats ? (global::Protocol.Protobuf.PotionStats) stats_ : null; }
      set {
        stats_ = value;
        statsCase_ = value == null ? StatsOneofCase.None : StatsOneofCase.PotionStats;
      }
    }

    private object stats_;
    /// <summary>Enum of possible cases for the "stats" oneof.</summary>
    public enum StatsOneofCase {
      None = 0,
      ArmorStats = 3,
      WeaponStats = 4,
      PotionStats = 5,
    }
    private StatsOneofCase statsCase_ = StatsOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatsOneofCase StatsCase {
      get { return statsCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStats() {
      statsCase_ = StatsOneofCase.None;
      stats_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ItemData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ItemData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Type != other.Type) return false;
      if (!object.Equals(ArmorStats, other.ArmorStats)) return false;
      if (!object.Equals(WeaponStats, other.WeaponStats)) return false;
      if (!object.Equals(PotionStats, other.PotionStats)) return false;
      if (StatsCase != other.StatsCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Type != global::Protocol.Protobuf.ItemData.Types.ItemType.Armor) hash ^= Type.GetHashCode();
      if (statsCase_ == StatsOneofCase.ArmorStats) hash ^= ArmorStats.GetHashCode();
      if (statsCase_ == StatsOneofCase.WeaponStats) hash ^= WeaponStats.GetHashCode();
      if (statsCase_ == StatsOneofCase.PotionStats) hash ^= PotionStats.GetHashCode();
      hash ^= (int) statsCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Type != global::Protocol.Protobuf.ItemData.Types.ItemType.Armor) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (statsCase_ == StatsOneofCase.ArmorStats) {
        output.WriteRawTag(26);
        output.WriteMessage(ArmorStats);
      }
      if (statsCase_ == StatsOneofCase.WeaponStats) {
        output.WriteRawTag(34);
        output.WriteMessage(WeaponStats);
      }
      if (statsCase_ == StatsOneofCase.PotionStats) {
        output.WriteRawTag(42);
        output.WriteMessage(PotionStats);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Type != global::Protocol.Protobuf.ItemData.Types.ItemType.Armor) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (statsCase_ == StatsOneofCase.ArmorStats) {
        output.WriteRawTag(26);
        output.WriteMessage(ArmorStats);
      }
      if (statsCase_ == StatsOneofCase.WeaponStats) {
        output.WriteRawTag(34);
        output.WriteMessage(WeaponStats);
      }
      if (statsCase_ == StatsOneofCase.PotionStats) {
        output.WriteRawTag(42);
        output.WriteMessage(PotionStats);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Type != global::Protocol.Protobuf.ItemData.Types.ItemType.Armor) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (statsCase_ == StatsOneofCase.ArmorStats) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ArmorStats);
      }
      if (statsCase_ == StatsOneofCase.WeaponStats) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WeaponStats);
      }
      if (statsCase_ == StatsOneofCase.PotionStats) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PotionStats);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ItemData other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Type != global::Protocol.Protobuf.ItemData.Types.ItemType.Armor) {
        Type = other.Type;
      }
      switch (other.StatsCase) {
        case StatsOneofCase.ArmorStats:
          if (ArmorStats == null) {
            ArmorStats = new global::Protocol.Protobuf.ArmorStats();
          }
          ArmorStats.MergeFrom(other.ArmorStats);
          break;
        case StatsOneofCase.WeaponStats:
          if (WeaponStats == null) {
            WeaponStats = new global::Protocol.Protobuf.WeaponStats();
          }
          WeaponStats.MergeFrom(other.WeaponStats);
          break;
        case StatsOneofCase.PotionStats:
          if (PotionStats == null) {
            PotionStats = new global::Protocol.Protobuf.PotionStats();
          }
          PotionStats.MergeFrom(other.PotionStats);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Type = (global::Protocol.Protobuf.ItemData.Types.ItemType) input.ReadEnum();
            break;
          }
          case 26: {
            global::Protocol.Protobuf.ArmorStats subBuilder = new global::Protocol.Protobuf.ArmorStats();
            if (statsCase_ == StatsOneofCase.ArmorStats) {
              subBuilder.MergeFrom(ArmorStats);
            }
            input.ReadMessage(subBuilder);
            ArmorStats = subBuilder;
            break;
          }
          case 34: {
            global::Protocol.Protobuf.WeaponStats subBuilder = new global::Protocol.Protobuf.WeaponStats();
            if (statsCase_ == StatsOneofCase.WeaponStats) {
              subBuilder.MergeFrom(WeaponStats);
            }
            input.ReadMessage(subBuilder);
            WeaponStats = subBuilder;
            break;
          }
          case 42: {
            global::Protocol.Protobuf.PotionStats subBuilder = new global::Protocol.Protobuf.PotionStats();
            if (statsCase_ == StatsOneofCase.PotionStats) {
              subBuilder.MergeFrom(PotionStats);
            }
            input.ReadMessage(subBuilder);
            PotionStats = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Type = (global::Protocol.Protobuf.ItemData.Types.ItemType) input.ReadEnum();
            break;
          }
          case 26: {
            global::Protocol.Protobuf.ArmorStats subBuilder = new global::Protocol.Protobuf.ArmorStats();
            if (statsCase_ == StatsOneofCase.ArmorStats) {
              subBuilder.MergeFrom(ArmorStats);
            }
            input.ReadMessage(subBuilder);
            ArmorStats = subBuilder;
            break;
          }
          case 34: {
            global::Protocol.Protobuf.WeaponStats subBuilder = new global::Protocol.Protobuf.WeaponStats();
            if (statsCase_ == StatsOneofCase.WeaponStats) {
              subBuilder.MergeFrom(WeaponStats);
            }
            input.ReadMessage(subBuilder);
            WeaponStats = subBuilder;
            break;
          }
          case 42: {
            global::Protocol.Protobuf.PotionStats subBuilder = new global::Protocol.Protobuf.PotionStats();
            if (statsCase_ == StatsOneofCase.PotionStats) {
              subBuilder.MergeFrom(PotionStats);
            }
            input.ReadMessage(subBuilder);
            PotionStats = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ItemData message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum ItemType {
        [pbr::OriginalName("ARMOR")] Armor = 0,
        [pbr::OriginalName("WEAPON")] Weapon = 1,
        [pbr::OriginalName("POTION")] Potion = 2,
      }

    }
    #endregion

  }

  public sealed partial class ArmorStats : pb::IMessage<ArmorStats>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ArmorStats> _parser = new pb::MessageParser<ArmorStats>(() => new ArmorStats());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ArmorStats> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.Protobuf.OtherReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArmorStats() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArmorStats(ArmorStats other) : this() {
      baseStats_ = other.baseStats_ != null ? other.baseStats_.Clone() : null;
      protection_ = other.protection_;
      blockChance_ = other.blockChance_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArmorStats Clone() {
      return new ArmorStats(this);
    }

    /// <summary>Field number for the "baseStats" field.</summary>
    public const int BaseStatsFieldNumber = 1;
    private global::Protocol.Protobuf.BaseItemStats baseStats_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.Protobuf.BaseItemStats BaseStats {
      get { return baseStats_; }
      set {
        baseStats_ = value;
      }
    }

    /// <summary>Field number for the "protection" field.</summary>
    public const int ProtectionFieldNumber = 2;
    private uint protection_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Protection {
      get { return protection_; }
      set {
        protection_ = value;
      }
    }

    /// <summary>Field number for the "blockChance" field.</summary>
    public const int BlockChanceFieldNumber = 3;
    private float blockChance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float BlockChance {
      get { return blockChance_; }
      set {
        blockChance_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ArmorStats);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ArmorStats other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(BaseStats, other.BaseStats)) return false;
      if (Protection != other.Protection) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(BlockChance, other.BlockChance)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (baseStats_ != null) hash ^= BaseStats.GetHashCode();
      if (Protection != 0) hash ^= Protection.GetHashCode();
      if (BlockChance != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(BlockChance);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (baseStats_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BaseStats);
      }
      if (Protection != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Protection);
      }
      if (BlockChance != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(BlockChance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (baseStats_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BaseStats);
      }
      if (Protection != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Protection);
      }
      if (BlockChance != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(BlockChance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (baseStats_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BaseStats);
      }
      if (Protection != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Protection);
      }
      if (BlockChance != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ArmorStats other) {
      if (other == null) {
        return;
      }
      if (other.baseStats_ != null) {
        if (baseStats_ == null) {
          BaseStats = new global::Protocol.Protobuf.BaseItemStats();
        }
        BaseStats.MergeFrom(other.BaseStats);
      }
      if (other.Protection != 0) {
        Protection = other.Protection;
      }
      if (other.BlockChance != 0F) {
        BlockChance = other.BlockChance;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (baseStats_ == null) {
              BaseStats = new global::Protocol.Protobuf.BaseItemStats();
            }
            input.ReadMessage(BaseStats);
            break;
          }
          case 16: {
            Protection = input.ReadUInt32();
            break;
          }
          case 29: {
            BlockChance = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (baseStats_ == null) {
              BaseStats = new global::Protocol.Protobuf.BaseItemStats();
            }
            input.ReadMessage(BaseStats);
            break;
          }
          case 16: {
            Protection = input.ReadUInt32();
            break;
          }
          case 29: {
            BlockChance = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class WeaponStats : pb::IMessage<WeaponStats>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WeaponStats> _parser = new pb::MessageParser<WeaponStats>(() => new WeaponStats());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WeaponStats> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.Protobuf.OtherReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WeaponStats() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WeaponStats(WeaponStats other) : this() {
      baseStats_ = other.baseStats_ != null ? other.baseStats_.Clone() : null;
      damage_ = other.damage_;
      critChance_ = other.critChance_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WeaponStats Clone() {
      return new WeaponStats(this);
    }

    /// <summary>Field number for the "baseStats" field.</summary>
    public const int BaseStatsFieldNumber = 1;
    private global::Protocol.Protobuf.BaseItemStats baseStats_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.Protobuf.BaseItemStats BaseStats {
      get { return baseStats_; }
      set {
        baseStats_ = value;
      }
    }

    /// <summary>Field number for the "damage" field.</summary>
    public const int DamageFieldNumber = 2;
    private uint damage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Damage {
      get { return damage_; }
      set {
        damage_ = value;
      }
    }

    /// <summary>Field number for the "critChance" field.</summary>
    public const int CritChanceFieldNumber = 3;
    private float critChance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float CritChance {
      get { return critChance_; }
      set {
        critChance_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WeaponStats);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WeaponStats other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(BaseStats, other.BaseStats)) return false;
      if (Damage != other.Damage) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CritChance, other.CritChance)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (baseStats_ != null) hash ^= BaseStats.GetHashCode();
      if (Damage != 0) hash ^= Damage.GetHashCode();
      if (CritChance != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CritChance);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (baseStats_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BaseStats);
      }
      if (Damage != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Damage);
      }
      if (CritChance != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(CritChance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (baseStats_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BaseStats);
      }
      if (Damage != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Damage);
      }
      if (CritChance != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(CritChance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (baseStats_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BaseStats);
      }
      if (Damage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Damage);
      }
      if (CritChance != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WeaponStats other) {
      if (other == null) {
        return;
      }
      if (other.baseStats_ != null) {
        if (baseStats_ == null) {
          BaseStats = new global::Protocol.Protobuf.BaseItemStats();
        }
        BaseStats.MergeFrom(other.BaseStats);
      }
      if (other.Damage != 0) {
        Damage = other.Damage;
      }
      if (other.CritChance != 0F) {
        CritChance = other.CritChance;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (baseStats_ == null) {
              BaseStats = new global::Protocol.Protobuf.BaseItemStats();
            }
            input.ReadMessage(BaseStats);
            break;
          }
          case 16: {
            Damage = input.ReadUInt32();
            break;
          }
          case 29: {
            CritChance = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (baseStats_ == null) {
              BaseStats = new global::Protocol.Protobuf.BaseItemStats();
            }
            input.ReadMessage(BaseStats);
            break;
          }
          case 16: {
            Damage = input.ReadUInt32();
            break;
          }
          case 29: {
            CritChance = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PotionStats : pb::IMessage<PotionStats>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PotionStats> _parser = new pb::MessageParser<PotionStats>(() => new PotionStats());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PotionStats> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.Protobuf.OtherReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PotionStats() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PotionStats(PotionStats other) : this() {
      baseStats_ = other.baseStats_ != null ? other.baseStats_.Clone() : null;
      durationMs_ = other.durationMs_;
      statusEffect_ = other.statusEffect_;
      statusMultiplier_ = other.statusMultiplier_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PotionStats Clone() {
      return new PotionStats(this);
    }

    /// <summary>Field number for the "baseStats" field.</summary>
    public const int BaseStatsFieldNumber = 1;
    private global::Protocol.Protobuf.BaseItemStats baseStats_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.Protobuf.BaseItemStats BaseStats {
      get { return baseStats_; }
      set {
        baseStats_ = value;
      }
    }

    /// <summary>Field number for the "durationMs" field.</summary>
    public const int DurationMsFieldNumber = 2;
    private ulong durationMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong DurationMs {
      get { return durationMs_; }
      set {
        durationMs_ = value;
      }
    }

    /// <summary>Field number for the "statusEffect" field.</summary>
    public const int StatusEffectFieldNumber = 3;
    private uint statusEffect_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StatusEffect {
      get { return statusEffect_; }
      set {
        statusEffect_ = value;
      }
    }

    /// <summary>Field number for the "statusMultiplier" field.</summary>
    public const int StatusMultiplierFieldNumber = 4;
    private float statusMultiplier_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float StatusMultiplier {
      get { return statusMultiplier_; }
      set {
        statusMultiplier_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PotionStats);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PotionStats other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(BaseStats, other.BaseStats)) return false;
      if (DurationMs != other.DurationMs) return false;
      if (StatusEffect != other.StatusEffect) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(StatusMultiplier, other.StatusMultiplier)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (baseStats_ != null) hash ^= BaseStats.GetHashCode();
      if (DurationMs != 0UL) hash ^= DurationMs.GetHashCode();
      if (StatusEffect != 0) hash ^= StatusEffect.GetHashCode();
      if (StatusMultiplier != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(StatusMultiplier);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (baseStats_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BaseStats);
      }
      if (DurationMs != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(DurationMs);
      }
      if (StatusEffect != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(StatusEffect);
      }
      if (StatusMultiplier != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(StatusMultiplier);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (baseStats_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BaseStats);
      }
      if (DurationMs != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(DurationMs);
      }
      if (StatusEffect != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(StatusEffect);
      }
      if (StatusMultiplier != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(StatusMultiplier);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (baseStats_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BaseStats);
      }
      if (DurationMs != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(DurationMs);
      }
      if (StatusEffect != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StatusEffect);
      }
      if (StatusMultiplier != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PotionStats other) {
      if (other == null) {
        return;
      }
      if (other.baseStats_ != null) {
        if (baseStats_ == null) {
          BaseStats = new global::Protocol.Protobuf.BaseItemStats();
        }
        BaseStats.MergeFrom(other.BaseStats);
      }
      if (other.DurationMs != 0UL) {
        DurationMs = other.DurationMs;
      }
      if (other.StatusEffect != 0) {
        StatusEffect = other.StatusEffect;
      }
      if (other.StatusMultiplier != 0F) {
        StatusMultiplier = other.StatusMultiplier;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (baseStats_ == null) {
              BaseStats = new global::Protocol.Protobuf.BaseItemStats();
            }
            input.ReadMessage(BaseStats);
            break;
          }
          case 16: {
            DurationMs = input.ReadUInt64();
            break;
          }
          case 24: {
            StatusEffect = input.ReadUInt32();
            break;
          }
          case 37: {
            StatusMultiplier = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (baseStats_ == null) {
              BaseStats = new global::Protocol.Protobuf.BaseItemStats();
            }
            input.ReadMessage(BaseStats);
            break;
          }
          case 16: {
            DurationMs = input.ReadUInt64();
            break;
          }
          case 24: {
            StatusEffect = input.ReadUInt32();
            break;
          }
          case 37: {
            StatusMultiplier = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BaseItemStats : pb::IMessage<BaseItemStats>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BaseItemStats> _parser = new pb::MessageParser<BaseItemStats>(() => new BaseItemStats());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BaseItemStats> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.Protobuf.OtherReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BaseItemStats() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BaseItemStats(BaseItemStats other) : this() {
      durability_ = other.durability_;
      maxDurability_ = other.maxDurability_;
      level_ = other.level_;
      rarity_ = other.rarity_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BaseItemStats Clone() {
      return new BaseItemStats(this);
    }

    /// <summary>Field number for the "durability" field.</summary>
    public const int DurabilityFieldNumber = 1;
    private uint durability_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Durability {
      get { return durability_; }
      set {
        durability_ = value;
      }
    }

    /// <summary>Field number for the "maxDurability" field.</summary>
    public const int MaxDurabilityFieldNumber = 2;
    private uint maxDurability_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MaxDurability {
      get { return maxDurability_; }
      set {
        maxDurability_ = value;
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 3;
    private uint level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "rarity" field.</summary>
    public const int RarityFieldNumber = 4;
    private global::Protocol.Protobuf.BaseItemStats.Types.Rarity rarity_ = global::Protocol.Protobuf.BaseItemStats.Types.Rarity.Common;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.Protobuf.BaseItemStats.Types.Rarity Rarity {
      get { return rarity_; }
      set {
        rarity_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BaseItemStats);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BaseItemStats other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Durability != other.Durability) return false;
      if (MaxDurability != other.MaxDurability) return false;
      if (Level != other.Level) return false;
      if (Rarity != other.Rarity) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Durability != 0) hash ^= Durability.GetHashCode();
      if (MaxDurability != 0) hash ^= MaxDurability.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (Rarity != global::Protocol.Protobuf.BaseItemStats.Types.Rarity.Common) hash ^= Rarity.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Durability != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Durability);
      }
      if (MaxDurability != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(MaxDurability);
      }
      if (Level != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Level);
      }
      if (Rarity != global::Protocol.Protobuf.BaseItemStats.Types.Rarity.Common) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Rarity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Durability != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Durability);
      }
      if (MaxDurability != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(MaxDurability);
      }
      if (Level != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Level);
      }
      if (Rarity != global::Protocol.Protobuf.BaseItemStats.Types.Rarity.Common) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Rarity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Durability != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Durability);
      }
      if (MaxDurability != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxDurability);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Level);
      }
      if (Rarity != global::Protocol.Protobuf.BaseItemStats.Types.Rarity.Common) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Rarity);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BaseItemStats other) {
      if (other == null) {
        return;
      }
      if (other.Durability != 0) {
        Durability = other.Durability;
      }
      if (other.MaxDurability != 0) {
        MaxDurability = other.MaxDurability;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.Rarity != global::Protocol.Protobuf.BaseItemStats.Types.Rarity.Common) {
        Rarity = other.Rarity;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Durability = input.ReadUInt32();
            break;
          }
          case 16: {
            MaxDurability = input.ReadUInt32();
            break;
          }
          case 24: {
            Level = input.ReadUInt32();
            break;
          }
          case 32: {
            Rarity = (global::Protocol.Protobuf.BaseItemStats.Types.Rarity) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Durability = input.ReadUInt32();
            break;
          }
          case 16: {
            MaxDurability = input.ReadUInt32();
            break;
          }
          case 24: {
            Level = input.ReadUInt32();
            break;
          }
          case 32: {
            Rarity = (global::Protocol.Protobuf.BaseItemStats.Types.Rarity) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the BaseItemStats message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Rarity {
        [pbr::OriginalName("COMMON")] Common = 0,
        [pbr::OriginalName("UNCOMMON")] Uncommon = 1,
        [pbr::OriginalName("RARE")] Rare = 2,
        [pbr::OriginalName("LEGENDARY")] Legendary = 3,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
